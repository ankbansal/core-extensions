#%RAML 0.8
title: Wi-Fi Configuration Resource
version: v0.0.3-20170611
documentation:
  - title: OCF Copyright
    content: Copyright (c) 2017 Open Connectivity Foundation, Inc. All rights reserved.
  - title: OCF License
    content: !include LICENSE.md
  - title: OCF Disclaimer
    content: !include DISCLAIMER.md

schemas:
  - WiFiConf: !include schemas/oic.r.wificonf-schema.json
  - WiFiConfUpdate: !include schemas/oic.r.wificonf-update-schema.json

traits:
  - interface-all:
      queryParameters:
        if:
          enum: ["oic.if.baseline","oic.if.rw"]
          
  - interface-baseline:
      queryParameters:
        if:
          enum: ["oic.if.baseline"]

  - interface-rw:
      queryParameters:
        if:
          enum: ["oic.if.rw"]

/WiFiConfResURI?if=oic.if.baseline:
  description: |
    WiFiConf resource stores essential information to help an unboxing device
    to connect to an existing Wi-Fi AP.

  displayName: Wi-Fi Configuration Resource Baseline Interface
  is: [ interface-baseline ]

  get:
    description: |
      Retrieve properties of WiFiConf resource.
      The information includes :
      1. Wi-Fi SSID and password
      2. Wi-Fi Security type (i.e. auth type and encription type)
      3. Wi-Fi hardware capability (i.e. supported frequencies, modes,
        auth types and encryption types)
    responses:
      200:
        body:
          application/json:
            schema: WiFiConf
            example: |
              {
                "rt": ["oic.r.wificonf"],
                "swmt" : ["A", "B", "G"],
                "swf": ["2.4G", "5G"],
                "tnn": "Home_AP_SSID",
                "cd": "Home_AP_PWD",
                "wat": "WPA2_PSK",
                "wet": "TKIP",
                "swat": ["WPA_PSK", "WPA2_PSK"],
                "swet": ["TKIP", "AES", "TKIP_AES"]
              }

  post:
    description: |
      Deliver Wi-Fi AP's information for an unboxing device to connect to it.

    body:
      application/json:
        schema: WiFiConfUpdate
        example: |
          {
            "tnn": "Home_AP_SSID",
            "cd": "Home_AP_PWD",
            "wat": "WPA2_PSK",
            "wet": "AES"
          }
    responses:
      200:
        body:
          application/json:
            schema: WiFiConfUpdate
            example: |
              {
                "tnn": "Home_AP_SSID",
                "cd": "Home_AP_PWD",
                "wat": "WPA2_PSK",
                "wet": "AES"
              }

/WiFiConfResURI?if=oic.if.rw:
  description: |
    WiFiConf resource stores essential information to help an unboxing device
    to connect to an existing Wi-Fi AP.

  displayName: Wi-Fi Configuration Resource Read Write Interface
  is: [ interface-rw ]

  get:
    description: |
      Retrieve properties of WiFiConf resource that can be updated by a client.

    responses:
      200:
        body:
          application/json:
            schema: WiFiConfUpdate
            example: |
              {
                "tnn": "Home_AP_SSID",
                "cd": "Home_AP_PWD",
                "wat": "WPA2_PSK",
                "wet": "AES"
              }

  post:
    description: |
      Deliver Wi-Fi AP's information for an unboxing device to connect to it.

    body:
      application/json:
        schema: WiFiConfUpdate
        example: |
          {
            "tnn": "Home_AP_SSID",
            "cd": "Home_AP_PWD",
            "wat": "WPA2_PSK",
            "wet": "AES"
          }
    responses:
      200:
        body:
          application/json:
            schema: WiFiConfUpdate
            example: |
              {
                "tnn": "Home_AP_SSID",
                "cd": "Home_AP_PWD",
                "wat": "WPA2_PSK",
                "wet": "AES"
              }
